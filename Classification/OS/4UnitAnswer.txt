存储器管理: 存储器管理的对象主要是内存。
1.预备知识:
    程序要跑起来要经历以下过程:
      编译:编译程序对用户源程序进行编译,形成若干目标模块。
      链接:链接程序将一组目标模块+相应的库函数链接起来形成一个完整的装入模块。
      装入:装入程序把装入模块装入内存中。
      
2.连续分配存储管理方式：
    连续分配方式:代码或数据的逻辑地址相邻,其内存空间分配时候物理地址也是相邻的。
    分类：
      1>.单一连续分配:
      2>.固定分区分配:
      3>.动态分区分配:称为可变分区分配,根据进程需要动态的为其分配内存空间。
      4>.动态可重定位分区分配:
  连续分配方式重要特点:内存空间分割太多，造成大量内存碎片。所以基于将进程分散装入分区中提出了离散分配方式。
  
3.对换技术:又称交换技术,实现内存与外存之间的作业和进程的调动。
    作用:改善内存利用率,直接提高处理及的利用率和系统的吞吐量。
    对换的类型:
        整体对换:也称为进程对换。对换是以一个进程为单位。
        页面(分段)对换:对换单位是进程的一个"页面"或者一个"分段"。
    离散分配方式思想:将进程分散的装入到许多不相邻接的分区中,充分利用内存空间,无需进行紧凑。
    离散分配的分类:
        1>.分页存储管理方式:以固定大小的页为单位的存储管理方式。
        2>.分段存储管理方式:以若干大小不同的段为单位的存储管理方式。
        3>.段页式存储管理方式:分页和分段两种存储管理方式相结合的产物,具有二者的优点。
 
4.分页和分段的主要区别:
    1>:页是信息的物理单位,分页用来削减内存的外零头,提高内存的利用率。即:分页是系统管理,是系统的行为,用户不得已看到。
       段是信息的逻辑单位,包含一组意义相对完整的信息,分段的目的:更好的满足用户的需要。
    2>.页的大小固定且由系统决定。
       段的大小不固定,取决于用户所编写的程序大小来决定。
    3>.分页的用户程序的地址空间是一维的。一个记忆符就可表示一个地址。
       分段的用户程序的地址空间是二维的。程序员在标识一个地址时，需给出段名和段内地址。
    4>.分页优点:很好的解决了内存的外部碎片问题。
       分段优点:便于实现,分段可共享,易于保护,可动态链接等一系列优点。
       
5.段页式存储管理方式:对两种存储方式各取所长。
    基本原理:分段原理和分页原理的结合。实现了两种方式各自的优点。
