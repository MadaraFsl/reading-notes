1.常规存储器特征:
    1>.一次性:将程序或者作业一次性装入到内存之中才开始运行。缺点:限制了大作业无法在小内存中运行,且浪费内存。
    2>.驻留性:作业或者进程常驻内存中。 缺点:占用了宝贵的内存资源。
    依据常规存储器的缺点以及现有作业需要的内存多的特点衍生出了虚拟存储器。
    
2.局部性原理:计算机上大多数设计都来自于这个原理。如MySql中索引设置为B+Tree就是基于此。虚拟存储器产生也是基于此。
    1>.时间局部性:程序中的某条指令或者数据被执行或被访问,不久以后这个指令或数据可能再次执行和访问。
            产生的原因:程序中存在大量的循环操作。
    2>.空间局部性:某个存储单元被访问了之后可能不久后会被再次访问。
            产生的原因:程序的顺序执行。
    
3.虚拟存储器:逻辑上对内存的扩充技术。
    1>.定义:指具有请求调入功能和置换功能,从逻辑上对内存的虚拟扩充。
    2>.特点:逻辑容量 = 内存大小 + 外存容量。  运行速度接近内存,但是成本接近外存。
    3>虚拟存储器和传统的存储器管理方式的比较:
        1>.与传统一次性装入整个程序相比,此时多次装入内存运行,所以具有多次性。
        2>.将代码和数据依据需求进行调入和调出,所以具有对换性。
        3>.逻辑上扩充内存,是用户看到的内存容量远大于实际内存容量。
    虚拟性是以多次性和对换性为基础。而多次性和对换性又必须建立在离散分配的基础上。

4.页面置换算法:进程运行期要访问的页面不在内存,系统必须从内存中调出一页的程序或数据到磁盘的交换区。将选择换出页面的算法称为页面置换算法。
  页面抖动:不适当的页面置换算法导致同样的页被多次换入和换出导致进程运行的时间大部分花费在置换工作上,称进程发生了抖动。
  抖动的预防策咯:1.局部置换策略,只在自己的内存中进行置换,不影响别人。
                2.在调入页面之前先判断每个进程在内存的驻留页面是否足够多。
                3.权衡缺页之间的平均时间和平均缺页服务时间是否大致相同。
                4.通过暂停某些进程的运行。
  
  
5.页面置换算法:
    1>Optimal最佳置换算法:淘汰页面是以后永远不再使用的页面。
        缺点:无法确定要淘汰的页面是哪一个页面。
        作用:用于评价其他算法的优劣性。
    2>.FIFO先进先出算法:淘汰最先进入内存的页面。
        缺点:不能保证经常使用的页面不被淘汰。
        评价:页面置换次数比最佳置换算法多一倍。
    3>.LRU最近最久未使用算法:淘汰选择最近醉酒未使用的页面。
        缺点:需要较多的支持硬件。例如记录进程在内存中各页的使用情况的寄存器和记录页面号的栈。
    4>.LFU最少使用置换算法:最近时期最少使用的页面将其淘汰。
        缺点:同LRU。
    5>.Clock:LRU的近似算法。为每一页设置一位访问位,同时将所有页面通过指针链接成一个循环队列。
        循环的通过访问位来检查页面的使用情况,故称为Clock算法。又因为通过访问位来判断是否使用过,又称为NRU最近未用算法。
    6>.PBA页面缓冲算法:空闲页面链表和修改页面链表。
