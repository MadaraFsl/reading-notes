1.数据完整性：
	定义：数据完整性指的是存储在数据库中的数据的一致性和准确性。
	分类：
			域完整性：又称列完整性。列的有效值的控制。
			实体完整性：又称行完整性。表中所有行都有一个唯一的标识符。即主键。
			引用完整性：保证主键和外键之间关系总是得到维护。
			
		
2.约束概念和类型：
	约束：通过限制列中数据，行中数据和表之间数据来保证数据完整性。
	约束类型：PRIMARY KEY,	FOREIGN KEY,	UNIQUE,	CHECK,	DEFAULT;
	约束和完整性之间的关系：
			域完整性对应约束类型：DEFAULT CHECK;
			实体完整性对应的约束类型：PRIMARY KEY, UNIQUE。二者区别是是否可以为NULL。
			引用完整性对应的约束类型：FOREIGN KEY.
			
			
3.数据库中的编程对象:视图，存储过程，触发器，函数。


4.视图概念特点和类型。
	定义：查看数据库中数据的一种方式,视图是一种逻辑对象，是一个虚表。除非是索引视图否则其不占用系统的物理存储空间。
	基表：视图中查询的表成为基表。
	视图的优点:
			1.选择性的将用户要使用的数据集中起来。
			2.掩盖了数据库中的复杂性，利于开发。
			3.简化了用户权限管理，保护了基表也不影响对应的查询。
			4.将视图中的数据引到另外一个应用程序便于分析和使用。
	视图的类型：
			标准视图：虚拟表,不占用物理空间。
			索引视图：物理化的视图,包含了所要计算的物理数据。
			分区视图：多分区数据连接，看起来是来自于一个表。
			
			
5.存储过程：高效率完成指定操作可重复使用的代码块。

	
6.触发器：特殊的存储过程。类似于约束,但比约束更加灵活。存储过程可以直接让用户调用执行，但是触发器不可以，只能自动执行。
	分类：
			DML触发器：数据库发生数据操纵事件会调用DML触发器。DML事件指对表数据的增删改。
				包含除查以外的三种基本触发器。一个表中可以存在多个触发器。
				主要作用：1.维护行级数据完整性
									2.一连串更新DB中相关表的数据。
									3.实现比约束强制更加复杂的数据完整性。							
			DDL触发器：数据库发生数据定义事件会调用DDL触发器。DDL事件指对表结构的修改。
			
			

7.用户定义函数：接受参数，执行操作，并且将结果以值得形式返回的例程。返回值可以是单个值也可以是一个结果集。
	用户定义函数组成：标题+正文。
